{"version":3,"file":"index.js","mappings":";;;;;;;;;AAEA;AAFA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC3BA;AAAA;AACA;AACA;;;;;;;;;;ACFA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACDA;AAFA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;ACfA;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7BA;AACA;;;;;;;;;;ACDA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA","sources":[".././src/utils/command.ts",".././src/utils/log.ts",".././src/utils/unity.ts",".././src/utils/validate.ts","../external node-commonjs \"child_process\"","../webpack/bootstrap","../webpack/runtime/compat",".././src/index.ts"],"sourcesContent":["import { spawn } from 'child_process';\r\n\r\nexport async function runCommand(command: string, args: string[]): Promise<number> {\r\n    let child = spawn(command, args)\r\n\r\n    child.stdout.pipe(process.stdout);\r\n    child.stderr.pipe(process.stderr);\r\n\r\n    const waitOutputCompletion = new Promise<void>( (resolve, _) => {\r\n        child.stdout.on('end', () => {\r\n            resolve();\r\n        })\r\n    }); \r\n\r\n    return new Promise<number>((resolve, reject) => {\r\n        child.on('error', () => reject());\r\n        child.on('close', (code: number) => resolve(code));\r\n        child.on('exit', (code: number) => resolve(code));\r\n    })\r\n    .then(async (exit) => {\r\n        const timeoput = setTimeout(() => {}, 2000)\r\n        await Promise.any([\r\n            timeoput,\r\n            waitOutputCompletion\r\n        ])\r\n        return exit\r\n    });\r\n}","export function logLines(...args: string[]) {\r\n    console.log(args.join('\\n'));\r\n}","export function getUnityPath(platform: string, version: string): string {\r\n    if (platform === 'windows') {\r\n        return `C:\\\\Program Files\\\\Unity\\\\Hub\\\\Editor\\\\${version}\\\\Editor\\\\Unity.exe`;\r\n    } \r\n    throw new Error(`Unsupported platform. Please specify 'windows' as platform`);\r\n}","import { Variables } from 'src/model/variable'\r\n\r\nlet _throw = (m: string) => {throw new Error(m)}\r\n\r\nexport function validateVariables(variables: Variables) {\r\n    Object.entries(variables).forEach(([key, value]) => {\r\n        if (value.value) {\r\n            return\r\n        }\r\n        if (value.mandatory) {\r\n            _throw(`Variable ${key} is mandatory`)\r\n        } else {\r\n            value.value = variables[key].default\r\n        }\r\n    })\r\n}","module.exports = require(\"child_process\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\nif (typeof __webpack_require__ !== 'undefined') __webpack_require__.ab = __dirname + \"/\";","export { runCommand } from \"./utils/command\";\r\nexport { logLines } from \"./utils/log\";\r\nexport { getUnityPath } from \"./utils/unity\";\r\nexport { validateVariables } from \"./utils/validate\";\r\nexport { VariableValue, Variables } from \"./model/variable\";"],"names":[],"sourceRoot":""}